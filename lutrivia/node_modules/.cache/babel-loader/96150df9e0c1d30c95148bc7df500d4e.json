{"ast":null,"code":"var _jsxFileName = \"/Users/snguyen/Downloads/lutrivia-react-master/lutrivia/src/components/QuestionCard.js\";\nimport React from 'react';\nexport default class QuestionCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedAns: false\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        selectedAns: false\n      });\n    };\n\n    this._selectAns = (e, value) => {\n      let right = this.props.question.answer === value;\n      let color;\n\n      if (right) {\n        color = 'green';\n        this.props.increasePoints();\n      } else {\n        color = 'red';\n      }\n\n      e.target.style.backgroundColor = color;\n      this.setState({\n        selectedAns: !this.state.selectedAns\n      });\n    };\n  }\n\n  render() {\n    console.log(\"Question card\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Question\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.question.text), React.createElement(\"button\", {\n      onClick: e => this.selectAns(e, true),\n      disabled: this.state.selectedAns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"True\"), React.createElement(\"button\", {\n      onClick: e => this.selectAns(e, false),\n      disabled: this.state.selectedAns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"False\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/snguyen/Downloads/lutrivia-react-master/lutrivia/src/components/QuestionCard.js"],"names":["React","QuestionCard","Component","state","selectedAns","componentDidMount","setState","_selectAns","e","value","right","props","question","answer","color","increasePoints","target","style","backgroundColor","render","console","log","text","selectAns"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAStDC,KATsD,GAS9C;AACJC,MAAAA,WAAW,EAAE;AADT,KAT8C;;AAAA,SAatDC,iBAbsD,GAalC,MAAM;AAC5B,WAAKC,QAAL,CAAc;AACbF,QAAAA,WAAW,EAAE;AADA,OAAd;AAGA,KAjBwD;;AAAA,SAmBtDG,UAnBsD,GAmBzC,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACvB,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,KAA+BJ,KAA3C;AACA,UAAIK,KAAJ;;AAEA,UAAIJ,KAAJ,EAAW;AACPI,QAAAA,KAAK,GAAG,OAAR;AACA,aAAKH,KAAL,CAAWI,cAAX;AACT,OAHK,MAGC;AACGD,QAAAA,KAAK,GAAG,KAAR;AACT;;AACKN,MAAAA,CAAC,CAACQ,MAAF,CAASC,KAAT,CAAeC,eAAf,GAAiCJ,KAAjC;AAEA,WAAKR,QAAL,CAAc;AACVF,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADf,OAAd;AAGH,KAlCqD;AAAA;;AAoCtDe,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKV,KAAL,CAAWC,QAAX,CAAoBU,IAAxB,CAFJ,EAGI;AAAQ,MAAA,OAAO,EAAKd,CAAD,IAAO,KAAKe,SAAL,CAAef,CAAf,EAAkB,IAAlB,CAA1B;AAAoD,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAMI;AAAQ,MAAA,OAAO,EAAKI,CAAD,IAAO,KAAKe,SAAL,CAAef,CAAf,EAAkB,KAAlB,CAA1B;AAAqD,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CADJ;AAYH;;AAlDqD","sourcesContent":["import React from 'react'\n\nexport default class QuestionCard extends React.Component {\n\n    // constructor(props) {\n\t// \tsuper(props);\n\t// \tthis.state = {\n\t// \t\tselectedAns: false\n\t// \t}\n\t// }\n\n    state = {\n        selectedAns: false\n    }\n\n    componentDidMount = () => {\n\t\tthis.setState({\n\t\t\tselectedAns: false\n\t\t});\n\t}\n\n    _selectAns = (e, value) => {\n        let right = this.props.question.answer === value\n        let color\n        \n        if (right) {\n            color = 'green'\n            this.props.increasePoints()\n\t\t} else {\n            color = 'red'\n\t\t}\n        e.target.style.backgroundColor = color\n        \n        this.setState({\n            selectedAns: !this.state.selectedAns\n        })\n    }\n\n    render() {\n        console.log(\"Question card\")\n        return(\n            <div>\n                Question\n                <p>{this.props.question.text}</p>\n                <button onClick = {(e) => this.selectAns(e, true) } disabled={this.state.selectedAns}>\n                    True\n                </button>\n                <button onClick = {(e) => this.selectAns(e, false) } disabled={this.state.selectedAns}>\n                    False\n                </button>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}