{"ast":null,"code":"var _jsxFileName = \"/Users/snguyen/Downloads/lutrivia-react-master/lutrivia/src/containers/Game.js\";\nimport React, { Component } from 'react';\nimport NewGame from '../components/NewGame';\nimport QuestionList from './QuestionList';\nimport Score from '../components/Score';\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      currentQuiz: [],\n      points: 0\n    };\n\n    this.getFourQuestions = questions => {\n      let fourQuestions = []; //use a while loop if we are checking for repeat question or filter or slice\n\n      for (let i = 0; i < 4; i++) {\n        let question = questions[Math.floor(Math.random() * questions.length)];\n        fourQuestions.push(question);\n      }\n\n      return fourQuestions;\n    };\n\n    this.newQuiz = questions => {\n      this.setState({\n        currentQuiz: this.getFourQuestions(questions)\n      });\n    };\n\n    this.increasePoints = () => {\n      this.setState({\n        points: this.state.points + 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/questions').then(res => res.json()).then(questions => {\n      this.setState({\n        questions: questions,\n        currentQuiz: this.getFourQuestions(questions)\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.currentQuiz);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Lutrivia\"), React.createElement(Score, {\n      score: this.state.points,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(NewGame, {\n      questions: this.state.questions,\n      newQuiz: this.newQuiz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(QuestionList, {\n      currentQuiz: this.state.currentQuiz,\n      increasePoints: this.increasePoints,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/snguyen/Downloads/lutrivia-react-master/lutrivia/src/containers/Game.js"],"names":["React","Component","NewGame","QuestionList","Score","Game","state","questions","currentQuiz","points","getFourQuestions","fourQuestions","i","question","Math","floor","random","length","push","newQuiz","setState","increasePoints","componentDidMount","fetch","then","res","json","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AACA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBK,KAFyB,GAEjB;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,WAAW,EAAC,EAFR;AAGJC,MAAAA,MAAM,EAAC;AAHH,KAFiB;;AAAA,SAmBzBC,gBAnByB,GAmBLH,SAAD,IAAe;AAC9B,UAAII,aAAa,GAAG,EAApB,CAD8B,CAE9B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,YAAIC,QAAQ,GAAGN,SAAS,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcT,SAAS,CAACU,MAAnC,CAAD,CAAxB;AACAN,QAAAA,aAAa,CAACO,IAAd,CAAmBL,QAAnB;AACH;;AACD,aAAOF,aAAP;AACH,KA3BwB;;AAAA,SA6BzBQ,OA7ByB,GA6BdZ,SAAD,IAAe;AACrB,WAAKa,QAAL,CAAc;AACVZ,QAAAA,WAAW,EAAE,KAAKE,gBAAL,CAAsBH,SAAtB;AADH,OAAd;AAGH,KAjCwB;;AAAA,SAmCzBc,cAnCyB,GAmCR,MAAM;AACnB,WAAKD,QAAL,CAAc;AACVX,QAAAA,MAAM,EAAC,KAAKH,KAAL,CAAWG,MAAX,GAAoB;AADjB,OAAd;AAGH,KAvCwB;AAAA;;AAQzBa,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMjB,SAAS,IAAI;AACf,WAAKa,QAAL,CAAc;AACVb,QAAAA,SAAS,EAAEA,SADD;AAEVC,QAAAA,WAAW,EAAE,KAAKE,gBAAL,CAAsBH,SAAtB;AAFH,OAAd;AAIH,KAPD;AAQH;;AAwBDoB,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWE,WAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAK,KAAKF,KAAL,CAAWG,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,OAAD;AACI,MAAA,SAAS,EAAK,KAAKH,KAAL,CAAWC,SAD7B;AAEI,MAAA,OAAO,EAAK,KAAKY,OAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAOI,oBAAC,YAAD;AACI,MAAA,WAAW,EAAK,KAAKb,KAAL,CAAWE,WAD/B;AAEI,MAAA,cAAc,EAAK,KAAKa,cAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAcH;;AAzDwB;;AA4D7B,eAAehB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport NewGame from '../components/NewGame'\nimport QuestionList from './QuestionList'\nimport Score from '../components/Score'\nclass Game extends Component {\n\n    state = {\n        questions: [],\n        currentQuiz:[],\n        points:0\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/questions')\n        .then(res => res.json())\n        .then(questions => {\n            this.setState({\n                questions: questions,\n                currentQuiz: this.getFourQuestions(questions)\n            })\n        })\n    }\n\n    getFourQuestions = (questions) => {\n        let fourQuestions = []\n        //use a while loop if we are checking for repeat question or filter or slice\n        for (let i = 0; i < 4; i++) {\n            let question = questions[Math.floor(Math.random()*questions.length)]\n            fourQuestions.push(question)\n        }\n        return fourQuestions\n    }\n\n    newQuiz = (questions) => {\n        this.setState({\n            currentQuiz: this.getFourQuestions(questions)\n        })\n    }\n\n    increasePoints = () => {\n        this.setState({\n            points:this.state.points + 1\n        })\n    }\n\n    render() {\n        console.log(this.state.currentQuiz)\n        return (\n            <div>\n                <h1>Lutrivia</h1>\n                <Score score = { this.state.points }/>\n                <NewGame \n                    questions = { this.state.questions }\n                    newQuiz = { this.newQuiz }\n                />\n                <QuestionList \n                    currentQuiz = { this.state.currentQuiz }\n                    increasePoints = { this.increasePoints }\n                />\n            </div>\n        )\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}